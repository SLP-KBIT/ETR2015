@startuml{class.png}

top to bottom direction

' クラス図でイメージ出来ない人用スケルトンコード javaっぽい？
' ---- データ代入は等式からアクセサになる
' UI ui = new UI()
' Select select = new Select()
' ui.mode_name = select.exec()
' mode = ModeCreater.create(ui.mode_name)
' mode.exec()
'
' public abstract Mode { void exec() }
' public class DebugMode implements Mode {}
' public class CalbrationMode implements Mode {}
' public class RunMode implements Mode {}

class UI {
  +selected_mode
  -mode_name
}

abstract Menu {
  +{abstract}exec()
}

class Select {
  +exec()
}

class Exec {
  +exec()
}

class ModeCreater {
  +create()
}

abstract Mode {
  +{abstract}exec()
}

class DebugMode {
  +exec()
}

class RunMode {
  +exec()
}

class CalbrationMode {
  +exec()
}

UI "1" *--> "2" Menu : <<use>>
Menu <|-- Select
Menu <|-- Exec
Select "1" o--> "1" ModeCreater
ModeCreater "1" .left.> "1" Mode : <<create>>
Exec "1" .left.> "1" Mode : <<use>>
Mode <|-- RunMode
Mode <|-- DebugMode
Mode <|-- CalbrationMode

abstract RunStrategy {
  +exec()
  +change()
}

class NormalAreaRunStrategy {
  +exec() : RunStrategy
}

class HardAreaRunStrategy {
  +exec() : RunStrategy
}

class ExceptionRunStrategy {
  +exec() : RunStrategy
}

RunMode "1" ..> "*" Run
DebugMode "1" ..> "*" Run

Run "1" o--> "*" RunStrategy
RunStrategy "1" o--> "*" RunMethod
RunStrategy "1" o--> "*" RunStyle

RunStrategy <|-- NormalAreaRunStrategy
RunStrategy <|-- HardAreaRunStrategy
RunStrategy <|-- ExceptionRunStrategy
RunStrategy <|-- TargetStraightMethod

class Run {
}

abstract RunMethod {
  +turn
  +speed
  +{abstract}calc_trun()
  +{abstract}run(turn, speed)
}

class MAIMAIMethod {
  +calc_trun() : int
  +run(turn, speed)
}

class TargetStraightMethod {
  +calc_trun() : int
  +run(turn, speed)
}

class PIDMethod {
  +run(turn, speed)
}

RunMethod <|-- MAIMAIMethod
RunMethod <|-- PIDMethod

abstract RunStyle {
  +change(style:RunStyle)
}

RunStyle <|-- Stand
RunStyle <|-- Tail

Run "1"..> "1" EV3 : <<use>>
EV3 "1" o-- "1" Devise
Devise "1" o--> "*" OutputDevise
Devise "1" o--> "*" InputDevise
Devise "1" o--> "*" ConnectionDevise

OutputDevise <|-- Motor
OutputDevise <|-- Display
OutputDevise <|-- Speaker

Motor <|-- TailMotor
Motor <|-- RunMotor

InputDevise  <|-- Censor
InputDevise  <|-- KeyButton

Censor <|-- JyroCencor
Censor <|-- SonarCencor
Censor <|-- TouchCencor
Censor <|-- LightCencor
Censor <|-- Encoder

ConnectionDevise <|-- Wifi
ConnectionDevise <|-- Bluetooth

@enduml
